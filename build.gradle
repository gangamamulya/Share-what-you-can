// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
  ext.kotlin_version = '1.6.21'
  repositories {
    google()
    mavenCentral()
  }
  dependencies {

    classpath "com.android.tools.build:gradle:7.0.3"

    //firebase
    classpath 'com.google.gms:google-services:4.3.10'
    classpath 'com.google.gms:google-services:3.0.0'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    //firebase crashlytics
    classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.2'
    classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.5.2"
    //serialization
    classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    //code coverage
    classpath "org.jacoco:org.jacoco.core:0.8.7"

  }
}


task clean(type: Delete) {
  delete rootProject.buildDir
}

task codeCoverageReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
  reports {
    xml.enabled = true
    html.enabled = true
    //csv.enabled = true
  }

  def includeFiles = [
    '**/database/**/*.*',
    '**/repository/**/*.*',
    '**/network/worker/*.*',
    '**/util/extensions/*.*'
  ]

  def mainSrc = "${project.projectDir}/src/main/java"

  classDirectories.from =
    fileTree(
      dir: "$buildDir/intermediates/app_classes/debug",
      includes: includeFiles
    ) + fileTree(
      dir: "$buildDir/tmp/kotlin-classes/debug",
      includes: includeFiles
    )
  sourceDirectories.from = files([mainSrc])
  executionData.from =
    fileTree(dir: "$buildDir", includes: [
      "jacoco/testDebugUnitTest.exec",
      "outputs/code_coverage/debugAndroidTest/connected/*coverage.ec"
    ])
}
